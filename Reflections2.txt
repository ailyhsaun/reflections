What happens when you initialize a repository? Why do you need to do it?
When I ran the commands (git init and then git status) I could see the .git as well as all the untracked files within the directory. I am not sure WHY it did not show "initial commit" like in the example though. This is necessary to begin tracking changes to the files, as I understand it.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is an in-between area that is used to add existing files into the repository so they can be tracked. The value is that you can control which files are added to a commit.

How can you use the staging area to make sure you have one commit per logical change?
Only add the files that logically go together (like cake and frosting) into a single commit

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Situations like: an experimental change, language adaption, or making a different mode (easy or hard for example) based off the master file.

How do the diagrams help you visualize the branch structure?
The diagram allows me to see which commots will be reachabe or unreachable along a branch as well as where the common commits are.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
It combines the code from the updated code (coins) into the existing branch (master) into an updated copy of the main file (master). It is represented that way so that it is able to see parent relationships of the commits.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic leaves it up to the computer/software to decide what is able to be merged and that can be a time saver but CAN cause issues if the computer to have trouble. Manual merging is much more tedious and time consuming.